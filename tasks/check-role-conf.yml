---
- name: Generate server wide modules configuration (db_filter_from_header)
  set_fact:
    odoo_role_odoo_server_wide_modules: "{{ odoo_role_odoo_server_wide_modules + ['dbfilter_from_header'] }}"
  when: odoo_role_enable_dbfilter_from_header | bool
  tags: ['server-wide']
  
- name: Check requirements for db_filter (odoo_role_channels)
  ansible.builtin.fail:
    msg: "Role Error: odoo_role_channels var is needed when queue_job is activated" # not required. The customized message that is printed. If omitted, prints a generic message.
  when: odoo_role_enable_dbfilter_from_header | bool and odoo_role_channels is not defined
  tags: ['server-wide']

- name: Generate server wide modules configuration  (queue_job)
  ansible.builtin.set_fact:
    odoo_role_odoo_server_wide_modules: "{{ odoo_role_odoo_server_wide_modules + ['queue_job'] }}"
  when: odoo_role_enable_queue_job | bool
  tags: ['server-wide']

- name: Check if server_wide modules are declared  
  ansible.builtin.fail:
    msg: "Role Error: {{ item }} module is configured as a server wide module but it is not present in modules dict"
  with_items: "{{ odoo_role_odoo_server_wide_modules }}"
  when: (item not in odoo_role_odoo_community_modules_dict['shared']) and (item != 'web') and (item != 'base')
