---
- name: Generate server wide modules configuration (db_filter_from_header)
  set_fact:
    odoo_role_odoo_server_wide_modules: "{{ odoo_role_odoo_server_wide_modules + ['dbfilter_from_header'] }}"
  when: odoo_role_enable_dbfilter_from_header | bool
  tags: ['server-wide']

- name: Generate server wide modules configuration  (queue_job)
  set_fact:
    odoo_role_odoo_server_wide_modules: "{{ odoo_role_odoo_server_wide_modules + ['queue_job'] }}"
  when: odoo_role_enable_queue_job | bool
  tags: ['server-wide']
  
- name: Check requirements for db_filter (odoo_role_channels)
  ansible.builtin.fail:
    msg: "Role Error: odoo_role_channels var is needed when queue_job is activated" # not required. The customized message that is printed. If omitted, prints a generic message.
  when: odoo_role_enable_dbfilter_from_header | bool and odoo_role_channels is not defined
  tags: ['server-wide']

- name: Extract databases from modules_dict
  ansible.builtin.set_fact:
     odoo_role_database_plugins: "{{ odoo_role_database_plugins | default([]) + [ item ] }}"     
  with_items: "{{ odoo_role_odoo_community_modules_dict }}"
  tags: ['server-wide']

- name: Check if server_wide modules are declared  
  ansible.builtin.set_fact:
     odoo_role_all_plugins: "{{  odoo_role_all_plugins | default([]) + [ odoo_role_odoo_community_modules_dict[item] ] | flatten }}"
  with_items: "{{ odoo_role_database_plugins }}"
  tags: ['server-wide']

- name: Require server_wide_modules to be declared
  ansible.builtin.fail:
     msg: "Role Error: odoo_role_odoo_server_wide_modules are declared but not present on odoo_role_odoo_community_modules_dict"
  with_items: "{{ odoo_role_odoo_server_wide_modules }}"
  when: (item not in odoo_role_all_plugins) and (item != 'base' and item != 'web')
  tags: ['server-wide']
